{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "cma",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "instruction"
      }
    },
    "instruction": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "simple_instruction"
        },
        {
          "type": "SYMBOL",
          "name": "instruction_with_operand"
        }
      ]
    },
    "simple_instruction": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "load"
        },
        {
          "type": "STRING",
          "value": "store"
        },
        {
          "type": "STRING",
          "value": "add"
        },
        {
          "type": "STRING",
          "value": "sub"
        },
        {
          "type": "STRING",
          "value": "mul"
        },
        {
          "type": "STRING",
          "value": "div"
        },
        {
          "type": "STRING",
          "value": "mod"
        },
        {
          "type": "STRING",
          "value": "and"
        },
        {
          "type": "STRING",
          "value": "or"
        },
        {
          "type": "STRING",
          "value": "xor"
        },
        {
          "type": "STRING",
          "value": "not"
        },
        {
          "type": "STRING",
          "value": "eq"
        },
        {
          "type": "STRING",
          "value": "neq"
        },
        {
          "type": "STRING",
          "value": "le"
        },
        {
          "type": "STRING",
          "value": "leq"
        },
        {
          "type": "STRING",
          "value": "gr"
        },
        {
          "type": "STRING",
          "value": "geq"
        },
        {
          "type": "STRING",
          "value": "return"
        },
        {
          "type": "STRING",
          "value": "halt"
        },
        {
          "type": "STRING",
          "value": "pop"
        },
        {
          "type": "STRING",
          "value": "dup"
        },
        {
          "type": "STRING",
          "value": "new"
        },
        {
          "type": "STRING",
          "value": "mark"
        }
      ]
    },
    "instruction_with_operand": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "mnemonic_with_operand"
        },
        {
          "type": "SYMBOL",
          "name": "number"
        }
      ]
    },
    "mnemonic_with_operand": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "loadc"
        },
        {
          "type": "STRING",
          "value": "jump"
        },
        {
          "type": "STRING",
          "value": "jumpz"
        },
        {
          "type": "STRING",
          "value": "call"
        },
        {
          "type": "STRING",
          "value": "alloc"
        },
        {
          "type": "STRING",
          "value": "loada"
        },
        {
          "type": "STRING",
          "value": "storea"
        },
        {
          "type": "STRING",
          "value": "move"
        },
        {
          "type": "STRING",
          "value": "enter"
        },
        {
          "type": "STRING",
          "value": "loadrc"
        },
        {
          "type": "STRING",
          "value": "loadr"
        },
        {
          "type": "STRING",
          "value": "storer"
        }
      ]
    },
    "number": {
      "type": "PATTERN",
      "value": "-?\\d+"
    },
    "comment": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "//"
          },
          {
            "type": "PATTERN",
            "value": ".*"
          }
        ]
      }
    }
  },
  "extras": [
    {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "\\s+"
      }
    },
    {
      "type": "SYMBOL",
      "name": "comment"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
